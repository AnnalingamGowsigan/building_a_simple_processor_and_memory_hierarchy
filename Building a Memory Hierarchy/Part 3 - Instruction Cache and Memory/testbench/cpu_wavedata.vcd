$date
	Wed Mar 09 09:38:41 2022
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module cpu_tb $end
$var wire 32 ! mem_writedata [31:0] $end
$var wire 1 " mem_write $end
$var wire 32 # mem_readdata [31:0] $end
$var wire 1 $ mem_read $end
$var wire 1 % mem_busywait $end
$var wire 6 & mem_address [5:0] $end
$var wire 128 ' i_mem_readdata [127:0] $end
$var wire 1 ( i_mem_read $end
$var wire 1 ) i_mem_busywait $end
$var wire 6 * i_mem_address [5:0] $end
$var wire 1 + WRITE $end
$var wire 8 , REGOUT1 [7:0] $end
$var wire 8 - READDATA [7:0] $end
$var wire 1 . READ $end
$var wire 10 / PC_FOR_INSTR [9:0] $end
$var wire 32 0 PC [31:0] $end
$var wire 1 1 INSTR_CACHE_BUSYWAIT_FOR_CPU $end
$var wire 32 2 INSTRUCTION [31:0] $end
$var wire 1 3 DATA_CACHE_BUSYWAIT $end
$var wire 8 4 ALURESULT [7:0] $end
$var reg 1 5 CLK $end
$var reg 1 6 RESET $end
$scope module mycpu $end
$var wire 1 5 CLK $end
$var wire 1 6 RESET $end
$var wire 8 7 twosCompliment_1_result [7:0] $end
$var wire 1 8 jump_branch_selector_result $end
$var wire 1 9 ZERO $end
$var wire 3 : WRITEREG [2:0] $end
$var wire 1 ; WRITEENABLE $end
$var wire 1 + WRITE $end
$var wire 8 < REGOUT2 [7:0] $end
$var wire 8 = REGOUT1 [7:0] $end
$var wire 3 > READREG2 [2:0] $end
$var wire 3 ? READREG1 [2:0] $end
$var wire 8 @ READDATA [7:0] $end
$var wire 1 . READ $end
$var wire 8 A RD_IMMEDIATE [7:0] $end
$var wire 32 B PC [31:0] $end
$var wire 8 C OPCODE [7:0] $end
$var wire 8 D MUX2_result [7:0] $end
$var wire 1 E MUX2_SELECTOR_FOR_IMM $end
$var wire 8 F MUX1_result [7:0] $end
$var wire 1 G MUX1_SELECTOR_FOR_SUB $end
$var wire 1 H JUMP $end
$var wire 1 I ISBUSYWAIT $end
$var wire 1 1 INSTR_CACHE_BUSYWAIT $end
$var wire 32 J INSTRUCTION [31:0] $end
$var wire 8 K IMMEDIATE [7:0] $end
$var wire 8 L DATA_MEMORY_MUX_result [7:0] $end
$var wire 1 M DATA_MEMORY_MUX_SELECTOR $end
$var wire 1 3 BUSYWAIT $end
$var wire 1 N BRANCH $end
$var wire 8 O ALURESULT [7:0] $end
$var wire 3 P ALUOP [2:0] $end
$scope module my_Control_unit $end
$var wire 1 I ISBUSYWAIT $end
$var wire 8 Q OPCODE [7:0] $end
$var wire 1 3 BUSYWAIT $end
$var reg 3 R ALUOP [2:0] $end
$var reg 1 M DATA_MEMORY_MUX_SELECTOR $end
$var reg 1 N ISBRANCH $end
$var reg 1 H ISJUMP $end
$var reg 1 G MUX1_SELECTOR $end
$var reg 1 E MUX2_SELECTOR $end
$var reg 1 . READ $end
$var reg 1 + WRITE $end
$var reg 1 ; WRITEENABLE $end
$upscope $end
$scope module my_DATA_MEMORY_MUX $end
$var wire 1 M mux_seletor $end
$var wire 8 S mux_result [7:0] $end
$var wire 8 T input1 [7:0] $end
$var wire 8 U input0 [7:0] $end
$upscope $end
$scope module my_MUX1 $end
$var wire 1 G mux_seletor $end
$var wire 8 V mux_result [7:0] $end
$var wire 8 W input1 [7:0] $end
$var wire 8 X input0 [7:0] $end
$upscope $end
$scope module my_MUX2 $end
$var wire 8 Y input0 [7:0] $end
$var wire 8 Z input1 [7:0] $end
$var wire 1 E mux_seletor $end
$var wire 8 [ mux_result [7:0] $end
$upscope $end
$scope module my_PC $end
$var wire 1 5 CLK $end
$var wire 1 I ISBUSYWAIT $end
$var wire 8 \ RD_imm [7:0] $end
$var wire 1 6 RESET $end
$var wire 32 ] nextAddress [31:0] $end
$var wire 32 ^ my_signextender_result [31:0] $end
$var wire 32 _ my_shiftleft_2_result [31:0] $end
$var wire 32 ` jump_branch_selector_result [31:0] $end
$var wire 1 8 jump_branch_selector $end
$var wire 1 1 INSTR_CACHE_BUSYWAIT $end
$var wire 1 a BUSYWAIT $end
$var reg 32 b PC [31:0] $end
$var reg 32 c PC_reg [31:0] $end
$var reg 32 d targetAddress [31:0] $end
$scope module my_mux2_1_forPC $end
$var wire 32 e input0 [31:0] $end
$var wire 32 f input1 [31:0] $end
$var wire 1 8 mux_seletor $end
$var wire 32 g mux_result [31:0] $end
$upscope $end
$scope module my_shiftleft_2 $end
$var wire 32 h OUT [31:0] $end
$var wire 32 i IN [31:0] $end
$upscope $end
$scope module my_signextender $end
$var wire 8 j unextended [7:0] $end
$var reg 32 k extended [31:0] $end
$upscope $end
$upscope $end
$scope module my_alu $end
$var wire 8 l DATA2 [7:0] $end
$var wire 3 m SELECT [2:0] $end
$var wire 8 n OR_result [7:0] $end
$var wire 8 o MULTIPLY_result [7:0] $end
$var wire 8 p FORWARD_result [7:0] $end
$var wire 8 q DATA1 [7:0] $end
$var wire 8 r AND_result [7:0] $end
$var wire 8 s ADD_result [7:0] $end
$var reg 8 t RESULT [7:0] $end
$var reg 1 9 ZERO $end
$scope module ADD_1 $end
$var wire 8 u DATA2 [7:0] $end
$var wire 8 v RESULT [7:0] $end
$var wire 8 w DATA1 [7:0] $end
$upscope $end
$scope module AND_1 $end
$var wire 8 x DATA2 [7:0] $end
$var wire 8 y RESULT [7:0] $end
$var wire 8 z DATA1 [7:0] $end
$upscope $end
$scope module FORWARD_1 $end
$var wire 8 { DATA2 [7:0] $end
$var wire 8 | RESULT [7:0] $end
$upscope $end
$scope module MULTIPLY_1 $end
$var wire 8 } DATA2 [7:0] $end
$var wire 8 ~ DATA1 [7:0] $end
$var reg 8 !" RESULT [7:0] $end
$upscope $end
$scope module OR_1 $end
$var wire 8 "" DATA2 [7:0] $end
$var wire 8 #" RESULT [7:0] $end
$var wire 8 $" DATA1 [7:0] $end
$upscope $end
$upscope $end
$scope module my_mux4_1 $end
$var wire 1 %" input0 $end
$var wire 1 &" input1 $end
$var wire 1 9 input2 $end
$var wire 1 '" input3 $end
$var wire 1 N mux_seletor_branch $end
$var wire 1 H mux_seletor_jump $end
$var wire 1 8 mux_result $end
$upscope $end
$scope module my_reg_file $end
$var wire 1 5 CLK $end
$var wire 8 (" IN [7:0] $end
$var wire 3 )" INADDRESS [2:0] $end
$var wire 8 *" OUT1 [7:0] $end
$var wire 3 +" OUT1ADDRESS [2:0] $end
$var wire 8 ," OUT2 [7:0] $end
$var wire 3 -" OUT2ADDRESS [2:0] $end
$var wire 1 6 RESET $end
$var wire 1 ; WRITE $end
$var wire 8 ." reg0 [7:0] $end
$var wire 8 /" reg1 [7:0] $end
$var wire 8 0" reg2 [7:0] $end
$var wire 8 1" reg3 [7:0] $end
$var wire 8 2" reg4 [7:0] $end
$var wire 8 3" reg5 [7:0] $end
$var wire 8 4" reg6 [7:0] $end
$var wire 8 5" reg7 [7:0] $end
$upscope $end
$scope module my_twosCompliment $end
$var wire 8 6" in [7:0] $end
$var wire 8 7" result [7:0] $end
$upscope $end
$upscope $end
$scope module mydata_memory $end
$var wire 1 5 clock $end
$var wire 1 6 reset $end
$var wire 32 8" writedata [31:0] $end
$var wire 1 " write $end
$var wire 1 $ read $end
$var wire 6 9" address [5:0] $end
$var reg 1 % busywait $end
$var reg 1 :" readaccess $end
$var reg 32 ;" readdata [31:0] $end
$var reg 1 <" writeaccess $end
$var integer 32 =" i [31:0] $end
$upscope $end
$scope module mydcache $end
$var wire 1 5 CLK $end
$var wire 8 >" C_ADDRESS [7:0] $end
$var wire 1 . C_READ $end
$var wire 1 + C_WRITE $end
$var wire 8 ?" C_WRITEDATA [7:0] $end
$var wire 1 6 RESET $end
$var wire 1 @" isHit $end
$var wire 1 % mem_busywait $end
$var wire 32 A" mem_readdata [31:0] $end
$var wire 3 B" tag [2:0] $end
$var wire 2 C" offset [1:0] $end
$var wire 1 D" isTagMatch $end
$var wire 3 E" index [2:0] $end
$var reg 1 3 C_BUSYWAIT $end
$var reg 8 F" C_READDATA [7:0] $end
$var reg 32 G" cache_datablock [31:0] $end
$var reg 1 H" cache_dirtybit $end
$var reg 3 I" cache_tag [2:0] $end
$var reg 1 J" cache_validbit $end
$var reg 6 K" mem_address [5:0] $end
$var reg 1 $ mem_read $end
$var reg 1 " mem_write $end
$var reg 32 L" mem_writedata [31:0] $end
$var reg 3 M" next_state [2:0] $end
$var reg 1 N" readaccess $end
$var reg 3 O" state [2:0] $end
$var reg 8 P" temp_C_READDATA [7:0] $end
$var reg 1 Q" writeaccess $end
$var integer 32 R" j [31:0] $end
$upscope $end
$scope module myinstruction_memory $end
$var wire 1 5 clock $end
$var wire 1 ( read $end
$var wire 6 S" address [5:0] $end
$var reg 1 ) busywait $end
$var reg 1 T" readaccess $end
$var reg 128 U" readinst [127:0] $end
$upscope $end
$scope module mymcache $end
$var wire 1 5 CLK $end
$var wire 10 V" I_ADDRESS [9:0] $end
$var wire 1 6 RESET $end
$var wire 1 ) i_mem_busywait $end
$var wire 128 W" i_mem_readdata [127:0] $end
$var wire 1 X" isHit $end
$var wire 3 Y" tag [2:0] $end
$var wire 4 Z" offset [3:0] $end
$var wire 1 [" isTagMatch $end
$var wire 3 \" index [2:0] $end
$var reg 1 1 I_BUSYWAIT $end
$var reg 32 ]" I_READDATA [31:0] $end
$var reg 6 ^" i_mem_address [5:0] $end
$var reg 1 ( i_mem_read $end
$var reg 128 _" instr_cache_datablock [127:0] $end
$var reg 3 `" instr_cache_tag [2:0] $end
$var reg 1 a" instr_cache_validbit $end
$var reg 3 b" next_state [2:0] $end
$var reg 3 c" state [2:0] $end
$var reg 128 d" temp_I_READDATA [127:0] $end
$var integer 32 e" j [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx e"
bx d"
bx c"
bx b"
xa"
bx `"
bx _"
bx ^"
bx ]"
bx \"
x["
bx Z"
bx Y"
xX"
bx W"
bx V"
bx U"
0T"
bx S"
bx R"
xQ"
bx P"
bx O"
xN"
bx M"
bx L"
bx K"
xJ"
bx I"
xH"
bx G"
bx F"
bx E"
xD"
bx C"
bx B"
bx A"
x@"
bx ?"
bx >"
bx ="
x<"
bx ;"
x:"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
1'"
1&"
0%"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx00 h
bx g
bx f
bx e
bx d
bx c
bx b
xa
bx `
bx00 _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
xN
xM
bx L
bx K
bx J
xI
xH
xG
bx F
xE
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
x;
bx :
09
x8
bx 7
06
05
bx 4
x3
bx 2
x1
bx 0
bx /
x.
bx -
bx ,
x+
bx *
0)
x(
bx '
bx &
x%
x$
bx #
x"
bx !
$end
#20
0a
0I
03
0"
0$
b0 M"
01
0(
b0 b"
0<"
0:"
0%
b100000000 ="
b0 O"
b0 c"
16
#30
b1000 R"
b1000 e"
#40
15
#50
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 Z"
b0 \"
b0 Y"
b0 /
b0 V"
b0 0
b0 B
b0 b
b1000 e"
b1000 R"
#60
b1 b"
0X"
b0 d"
0a"
b0 `"
b0 _"
b100 c
b100 e
06
#69
1["
#80
05
#120
1a
1T"
1)
11
b0 *
b0 S"
b0 ^"
1(
b1 b"
b1 c"
15
#160
05
#200
15
#240
05
#280
15
#320
05
#360
15
#400
05
#440
15
#480
05
#520
15
bx00011001 '
bx00011001 U"
bx00011001 W"
#560
05
#600
15
#640
05
#680
15
#720
05
#760
15
#800
05
#840
15
#880
05
#920
15
bx0000000000011001 '
bx0000000000011001 U"
bx0000000000011001 W"
#960
05
#1000
15
#1040
05
#1080
15
#1120
05
#1160
15
#1200
05
#1240
15
#1280
05
#1320
15
bx000001000000000000011001 '
bx000001000000000000011001 U"
bx000001000000000000011001 W"
#1360
05
#1400
15
#1440
05
#1480
15
#1520
05
#1560
15
#1600
05
#1640
15
#1680
05
#1720
15
bx00000000000001000000000000011001 '
bx00000000000001000000000000011001 U"
bx00000000000001000000000000011001 W"
#1760
05
#1800
15
#1840
05
#1880
15
#1920
05
#1960
15
#2000
05
#2040
15
#2080
05
#2120
15
bx0010001100000000000001000000000000011001 '
bx0010001100000000000001000000000000011001 U"
bx0010001100000000000001000000000000011001 W"
#2160
05
#2200
15
#2240
05
#2280
15
#2320
05
#2360
15
#2400
05
#2440
15
#2480
05
#2520
15
bx000000000010001100000000000001000000000000011001 '
bx000000000010001100000000000001000000000000011001 U"
bx000000000010001100000000000001000000000000011001 W"
#2560
05
#2600
15
#2640
05
#2680
15
#2720
05
#2760
15
#2800
05
#2840
15
#2880
05
#2920
15
bx00000101000000000010001100000000000001000000000000011001 '
bx00000101000000000010001100000000000001000000000000011001 U"
bx00000101000000000010001100000000000001000000000000011001 W"
#2960
05
#3000
15
#3040
05
#3080
15
#3120
05
#3160
15
#3200
05
#3240
15
#3280
05
#3320
15
bx0000000000000101000000000010001100000000000001000000000000011001 '
bx0000000000000101000000000010001100000000000001000000000000011001 U"
bx0000000000000101000000000010001100000000000001000000000000011001 W"
#3360
05
#3400
15
#3440
05
#3480
15
#3520
05
#3560
15
#3600
05
#3640
15
#3680
05
#3720
15
bx000001010000000000000101000000000010001100000000000001000000000000011001 '
bx000001010000000000000101000000000010001100000000000001000000000000011001 U"
bx000001010000000000000101000000000010001100000000000001000000000000011001 W"
#3760
05
#3800
15
#3840
05
#3880
15
#3920
05
#3960
15
#4000
05
#4040
15
#4080
05
#4120
15
bx00000100000001010000000000000101000000000010001100000000000001000000000000011001 '
bx00000100000001010000000000000101000000000010001100000000000001000000000000011001 U"
bx00000100000001010000000000000101000000000010001100000000000001000000000000011001 W"
#4160
05
#4200
15
#4240
05
#4280
15
#4320
05
#4360
15
#4400
05
#4440
15
#4480
05
#4520
15
bx0000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 '
bx0000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 U"
bx0000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 W"
#4560
05
#4600
15
#4640
05
#4680
15
#4720
05
#4760
15
#4800
05
#4840
15
#4880
05
#4920
15
bx000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 '
bx000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 U"
bx000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 W"
#4960
05
#5000
15
#5040
05
#5080
15
#5120
05
#5160
15
#5200
05
#5240
15
#5280
05
#5320
15
bx01011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 '
bx01011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 U"
bx01011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 W"
#5360
05
#5400
15
#5440
05
#5480
15
#5520
05
#5560
15
#5600
05
#5640
15
#5680
05
#5720
15
bx0000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 '
bx0000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 U"
bx0000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 W"
#5760
05
#5800
15
#5840
05
#5880
15
#5920
05
#5960
15
#6000
05
#6040
15
#6080
05
#6120
15
bx000000010000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 '
bx000000010000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 U"
bx000000010000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 W"
#6160
05
#6200
15
#6240
05
#6280
15
#6320
05
#6360
15
#6400
05
#6440
15
#6480
05
#6520
bx *
bx S"
bx ^"
0(
b10 c"
b0 b"
15
0T"
0)
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 '
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 U"
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 W"
#6540
b0 _
b0 h
b0 ^
b0 i
b0 k
b0 Z
b0 -"
b0 +"
b0 )"
b0 Q
b0 \
b0 j
b0 A
b0 K
b0 >
b0 ?
b0 :
b0 C
b0 2
b0 J
b0 ]"
1X"
1a"
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000011001 _"
#6550
b10000 _
b10000 h
b100 ^
b100 i
b100 k
b100 ]
b100 `
b100 g
b11001 Z
b1 -"
b100 )"
b100 \
b100 j
b100 A
b11001 K
b1 >
b100 :
0Q"
0N"
08
b11001 D
b11001 [
b11001 l
b11001 u
b11001 x
b11001 {
b11001 }
b11001 ""
b1000000000000011001 2
b1000000000000011001 J
b1000000000000011001 ]"
0M
0.
0+
0N
0H
1E
0G
b0 P
b0 R
b0 m
1;
b1000000000000011001 d"
#6560
b1 C"
b110 E"
b0 B"
b11001 L
b11001 S
b11001 ("
b11001 4
b11001 O
b11001 U
b11001 t
b11001 >"
b0 F
b0 V
b0 Y
bx11xx1 n
bx11xx1 #"
b0xx00x r
b0xx00x y
b11001 p
b11001 |
b10100 d
b10100 f
b0 <
b0 X
b0 ,"
b0 6"
b0 ,
b0 =
b0 q
b0 w
b0 z
b0 ~
b0 $"
b0 *"
b0 ?"
05
#6570
b0 7
b0 W
b0 7"
b11001 n
b11001 #"
b0 r
b0 y
#6580
b11001 s
b11001 v
b0 o
b0 !"
#6600
0a
01
b0 c"
15
#6610
b11001 2"
b100 Z"
b100 /
b100 V"
b100 0
b100 B
b100 b
#6620
b10100 _
b10100 h
b100011 D
b100011 [
b100011 l
b100011 u
b100011 x
b100011 {
b100011 }
b100011 ""
b101 ^
b101 i
b101 k
b100011 Z
b11 -"
b101 )"
b101 \
b101 j
b101 A
b100011 K
b11 >
b101 :
b1010000000000100011 2
b1010000000000100011 J
b1010000000000100011 ]"
b1000 ]
b1000 `
b1000 g
b1010000000000100011 d"
b1000 c
b1000 e
#6630
b11 C"
b0 E"
b1 B"
b100011 L
b100011 S
b100011 ("
b100011 4
b100011 O
b100011 U
b100011 t
b100011 >"
b100011 n
b100011 #"
b100011 p
b100011 |
#6640
b11100 d
b11100 f
b100011 s
b100011 v
05
#6680
15
#6690
b100011 3"
b1000 Z"
b1000 /
b1000 V"
b1000 0
b1000 B
b1000 b
#6700
b11000 _
b11000 h
b101 D
b101 [
b101 l
b101 u
b101 x
b101 {
b101 }
b101 ""
b110 ^
b110 i
b110 k
b101 Z
b101 -"
b100 +"
b110 )"
b10 Q
b110 \
b110 j
b110 A
b101 K
b101 >
b100 ?
b110 :
b10 C
b10000001100000010000000101 2
b10000001100000010000000101 J
b10000001100000010000000101 ]"
b1100 ]
b1100 `
b1100 g
b10000001100000010000000101 d"
b1100 c
b1100 e
#6710
b0 D
b0 [
b0 l
b0 u
b0 x
b0 {
b0 }
b0 ""
b101 n
b101 #"
b101 p
b101 |
0E
b1 P
b1 R
b1 m
#6720
b100011 D
b100011 [
b100011 l
b100011 u
b100011 x
b100011 {
b100011 }
b100011 ""
b100011 F
b100011 V
b100011 Y
b0 n
b0 #"
b0 p
b0 |
b100100 d
b100100 f
b100011 <
b100011 X
b100011 ,"
b100011 6"
b11001 ,
b11001 =
b11001 q
b11001 w
b11001 z
b11001 ~
b11001 $"
b11001 *"
b11001 ?"
05
#6730
b1 r
b1 y
b100011 p
b100011 |
b11011101 7
b11011101 W
b11011101 7"
b111011 n
b111011 #"
#6740
b0 C"
b111 E"
b111100 L
b111100 S
b111100 ("
b111100 4
b111100 O
b111100 U
b111100 t
b111100 >"
b111100 s
b111100 v
#6750
b1101011 o
b1101011 !"
#6760
15
#6770
b111100 4"
b1100 Z"
b1100 /
b1100 V"
b1100 0
b1100 B
b1100 b
#6780
b100 _
b100 h
b1 ^
b1 i
b1 k
b1011010 Z
b10 -"
b0 +"
b1 )"
b0 Q
b1 \
b1 j
b1 A
b1011010 K
b10 >
b0 ?
b1 :
b0 C
b10000000001011010 2
b10000000001011010 J
b10000000001011010 ]"
b10000 ]
b10000 `
b10000 g
b10000000001011010 d"
b10000 c
b10000 e
#6790
b11 C"
b0 E"
b100011 L
b100011 S
b100011 ("
b1011010 D
b1011010 [
b1011010 l
b1011010 u
b1011010 x
b1011010 {
b1011010 }
b1011010 ""
b100011 4
b100011 O
b100011 U
b100011 t
b100011 >"
1E
b0 P
b0 R
b0 m
#6800
b10 C"
b110 E"
b10 B"
b1011010 L
b1011010 S
b1011010 ("
b1011010 4
b1011010 O
b1011010 U
b1011010 t
b1011010 >"
b0 F
b0 V
b0 Y
b11000 r
b11000 y
b1011011 n
b1011011 #"
b1011010 p
b1011010 |
b10100 d
b10100 f
b0 <
b0 X
b0 ,"
b0 6"
b0 ,
b0 =
b0 q
b0 w
b0 z
b0 ~
b0 $"
b0 *"
b0 ?"
05
#6810
b0 7
b0 W
b0 7"
b1011010 n
b1011010 #"
b0 r
b0 y
#6820
b1011010 s
b1011010 v
b0 o
b0 !"
#6840
15
#6850
b1011010 /"
b0 Z"
b1 \"
b10000 /
b10000 V"
b10000 0
b10000 B
b10000 b
#6860
b1 b"
0X"
b10100 ]
b10100 `
b10100 g
b0 d"
0a"
b0 _"
b10100 c
b10100 e
#6880
05
#6920
1a
1T"
1)
11
b1 *
b1 S"
b1 ^"
1(
b1 b"
b1 c"
15
#6960
05
#7000
15
#7040
05
#7080
15
#7120
05
#7160
15
#7200
05
#7240
15
#7280
05
#7320
15
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000000100 '
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000000100 U"
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000000000100 W"
#7360
05
#7400
15
#7440
05
#7480
15
#7520
05
#7560
15
#7600
05
#7640
15
#7680
05
#7720
15
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000100000100 '
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000100000100 U"
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000001000000000100000100 W"
#7760
05
#7800
15
#7840
05
#7880
15
#7920
05
#7960
15
#8000
05
#8040
15
#8080
05
#8120
15
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000000010000000100000100 '
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000000010000000100000100 U"
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000000000000010000000100000100 W"
#8160
05
#8200
15
#8240
05
#8280
15
#8320
05
#8360
15
#8400
05
#8440
15
#8480
05
#8520
15
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000011000000010000000100000100 '
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000011000000010000000100000100 U"
b10000000001011010000000100000011000000100000001010000000000000101000000000010001100000011000000010000000100000100 W"
#8560
05
#8600
15
#8640
05
#8680
15
#8720
05
#8760
15
#8800
05
#8840
15
#8880
05
#8920
15
b1000000000101101000000010000001100000010000000101000000000000010100000000xxxxxxxx00000011000000010000000100000100 '
b1000000000101101000000010000001100000010000000101000000000000010100000000xxxxxxxx00000011000000010000000100000100 U"
b1000000000101101000000010000001100000010000000101000000000000010100000000xxxxxxxx00000011000000010000000100000100 W"
#8960
05
#9000
15
#9040
05
#9080
15
#9120
05
#9160
15
#9200
05
#9240
15
#9280
05
#9320
15
b10000000001011010000000100000011000000100000001010000000000000101xxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b10000000001011010000000100000011000000100000001010000000000000101xxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b10000000001011010000000100000011000000100000001010000000000000101xxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#9360
05
#9400
15
#9440
05
#9480
15
#9520
05
#9560
15
#9600
05
#9640
15
#9680
05
#9720
15
b100000000010110100000001000000110000001000000010100000000xxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b100000000010110100000001000000110000001000000010100000000xxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b100000000010110100000001000000110000001000000010100000000xxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#9760
05
#9800
15
#9840
05
#9880
15
#9920
05
#9960
15
#10000
05
#10040
15
#10080
05
#10120
15
b1000000000101101000000010000001100000010000000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b1000000000101101000000010000001100000010000000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b1000000000101101000000010000001100000010000000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#10160
05
#10200
15
#10240
05
#10280
15
#10320
05
#10360
15
#10400
05
#10440
15
#10480
05
#10520
15
b10000000001011010000000100000011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b10000000001011010000000100000011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b10000000001011010000000100000011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#10560
05
#10600
15
#10640
05
#10680
15
#10720
05
#10760
15
#10800
05
#10840
15
#10880
05
#10920
15
b100000000010110100000001000000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b100000000010110100000001000000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b100000000010110100000001000000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#10960
05
#11000
15
#11040
05
#11080
15
#11120
05
#11160
15
#11200
05
#11240
15
#11280
05
#11320
15
b1000000000101101000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b1000000000101101000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b1000000000101101000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#11360
05
#11400
15
#11440
05
#11480
15
#11520
05
#11560
15
#11600
05
#11640
15
#11680
05
#11720
15
b10000000001011010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b10000000001011010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b10000000001011010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#11760
05
#11800
15
#11840
05
#11880
15
#11920
05
#11960
15
#12000
05
#12040
15
#12080
05
#12120
15
b100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b100000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#12160
05
#12200
15
#12240
05
#12280
15
#12320
05
#12360
15
#12400
05
#12440
15
#12480
05
#12520
15
b1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b1xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#12560
05
#12600
15
#12640
05
#12680
15
#12720
05
#12760
15
#12800
05
#12840
15
#12880
05
#12920
15
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 '
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 U"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000011000000010000000100000100 W"
#12960
05
#13000
15
#13040
05
#13080
15
#13120
05
#13160
15
#13200
05
#13240
15
#13280
05
#13320
bx *
bx S"
bx ^"
0(
b10 c"
b0 b"
15
0T"
0)
bx00000011000000010000000100000100 '
bx00000011000000010000000100000100 U"
bx00000011000000010000000100000100 W"
#13340
b0 _
b0 h
b0 D
b0 [
b0 l
b0 u
b0 x
b0 {
b0 }
b0 ""
b0 ^
b0 i
b0 k
b0 Z
b0 -"
b0 )"
b0 \
b0 j
b0 A
b0 K
b0 >
b0 :
b0 2
b0 J
b0 ]"
1X"
1a"
bx00000011000000010000000100000100 _"
#13350
b100 _
b100 h
b100 D
b100 [
b100 l
b100 u
b100 x
b100 {
b100 }
b100 ""
b1 ^
b1 i
b1 k
b0 C"
b0 E"
b0 B"
b0 L
b0 S
b0 ("
b100 Z
b100 -"
b1 +"
b1 )"
b11 Q
b1 \
b1 j
b1 A
b100 K
b100 >
b1 ?
b1 :
b11 C
b0 4
b0 O
b0 U
b0 t
b0 >"
b11000000010000000100000100 2
b11000000010000000100000100 J
b11000000010000000100000100 ]"
b0 n
b0 #"
b0 p
b0 |
b11000000010000000100000100 d"
#13360
b10 C"
b110 E"
b10 B"
b1011010 L
b1011010 S
b1011010 ("
b0 D
b0 [
b0 l
b0 u
b0 x
b0 {
b0 }
b0 ""
b1011010 4
b1011010 O
b1011010 U
b1011010 t
b1011010 >"
b100 n
b100 #"
b100 p
b100 |
0E
1G
b1 P
b1 R
b1 m
b11000 d
b11000 f
05
#13370
b0 n
b0 #"
b0 p
b0 |
b11001 <
b11001 X
b11001 ,"
b11001 6"
b1011010 ,
b1011010 =
b1011010 q
b1011010 w
b1011010 z
b1011010 ~
b1011010 $"
b1011010 *"
b1011010 ?"
#13380
b11100111 D
b11100111 [
b11100111 l
b11100111 u
b11100111 x
b11100111 {
b11100111 }
b11100111 ""
b11100111 F
b11100111 V
b11100111 Y
b11100111 7
b11100111 W
b11100111 7"
b1011010 n
b1011010 #"
#13390
b1000010 r
b1000010 y
b11111111 n
b11111111 #"
b11100111 p
b11100111 |
#13400
0a
b1 C"
b0 E"
b1000001 L
b1000001 S
b1000001 ("
b1000001 4
b1000001 O
b1000001 U
b1000001 t
b1000001 >"
01
b0 c"
b1000001 s
b1000001 v
15
#13410
b1000001 /"
b100 Z"
b10100 /
b10100 V"
b10100 0
b10100 B
b10100 b
b110110 o
b110110 !"
#13420
bx Z
bx -"
bx +"
bx )"
bx Q
bx \
bx j
bx A
bx K
bx >
bx ?
bx :
bx C
bx 2
bx J
bx ]"
b11000 ]
b11000 `
b11000 g
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx d"
b11000 c
b11000 e
#13430
xa
bx L
bx S
bx ("
xQ"
xN"
xI
x3
x8
xM
x.
x+
xN
xH
x;
#13440
bx <
bx X
bx ,"
bx 6"
bx ,
bx =
bx q
bx w
bx z
bx ~
bx $"
bx *"
bx ?"
05
#13450
bx D
bx [
bx l
bx u
bx x
bx {
bx }
bx ""
bx F
bx V
bx Y
bx 7
bx W
bx 7"
b111xx111 n
b111xx111 #"
bx00xxx r
bx00xxx y
#13460
0a
0I
03
bx C"
bx E"
bx B"
bx 4
bx O
bx U
bx t
bx >"
bx r
bx y
bx n
bx #"
bx p
bx |
bx s
bx v
#13470
bx o
bx !"
#13480
15
#13490
b1000 Z"
b11000 /
b11000 V"
b11000 0
b11000 B
b11000 b
#13500
b11x00 ]
b11x00 `
b11x00 g
b11100 c
b11100 e
#13520
05
#13560
15
#13570
b1x00 Z"
b11x00 /
b11x00 V"
b11x00 0
b11x00 B
b11x00 b
#13580
bx ]
bx `
bx g
bx c
bx e
#13600
05
#13640
15
#13650
bx Z"
bx \"
bx Y"
bx /
bx V"
bx 0
bx B
bx b
#13659
xX"
x["
#13660
xa"
bx `"
bx _"
#13680
05
#13720
15
#13760
05
#13800
15
#13840
05
#13880
15
#13920
05
#13960
15
#14000
05
#14040
15
#14080
05
#14120
15
#14160
05
#14200
15
#14240
05
#14280
15
#14320
05
#14360
15
#14400
05
#14440
15
#14480
05
#14520
15
#14560
05
#14600
15
#14640
05
#14680
15
#14720
05
#14760
15
#14800
05
#14840
15
#14880
05
#14920
15
#14960
05
#15000
15
#15040
05
#15080
15
#15120
05
#15160
15
#15200
05
#15240
15
#15280
05
#15320
15
#15360
05
#15400
15
#15440
05
#15480
15
#15520
05
#15560
15
#15600
05
#15640
15
#15680
05
#15720
15
#15760
05
#15800
15
#15840
05
#15880
15
#15920
05
#15960
15
#16000
05
#16040
15
#16080
05
#16120
15
#16160
05
#16200
15
#16240
05
#16280
15
#16320
05
#16360
15
#16400
05
#16440
15
#16480
05
#16520
15
#16560
05
#16600
15
#16640
05
#16680
15
#16720
05
#16760
15
#16800
05
#16840
15
#16880
05
#16920
15
#16960
05
#17000
15
#17040
05
#17080
15
#17120
05
#17160
15
#17200
05
#17240
15
#17280
05
#17320
15
#17360
05
#17400
15
#17440
05
#17480
15
#17520
05
#17560
15
#17600
05
#17640
15
#17680
05
#17720
15
#17760
05
#17800
15
#17840
05
#17880
15
#17920
05
#17960
15
#18000
05
#18040
15
#18080
05
#18120
15
#18160
05
#18200
15
#18240
05
#18280
15
#18320
05
#18360
15
#18400
05
#18440
15
#18480
05
#18520
15
#18560
05
#18600
15
#18640
05
#18680
15
#18720
05
#18760
15
#18800
05
#18840
15
#18880
05
#18920
15
#18960
05
#19000
15
#19040
05
#19080
15
#19120
05
#19160
15
#19200
05
#19240
15
#19280
05
#19320
15
#19360
05
#19400
15
#19440
05
#19480
15
#19520
05
#19560
15
#19600
05
#19640
15
#19680
05
#19720
15
#19760
05
#19800
15
#19840
05
#19880
15
#19920
05
#19960
15
#20000
05
#20040
15
#20060
